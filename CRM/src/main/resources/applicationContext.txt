<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">


    <!--spring配置文件，声明service/dao/工具类等对象-->

    <!--声明属性配置文件位置-->
    <context:property-placeholder location="classpath:jdbc.properties" />
    <!--声明数据源DataSource，连接数据库-->
    <bean id="datasource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!--连接数据库的属性-->
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>

    <!--声明SqlSessionFactoryBean来创建SqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--属性声明-->
        <property name="dataSource" ref="datasource" />
        <property name="configLocation" value="classpath:mybatis.xml" />
    </bean>

    <!--声明mybatis扫描器，创建dao对象-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--属性配置
            1、sqlSessionFactoryBeanName的name属性的值即上面创建的sqlSessionFactory的id
            2、basePackage的name属性值是dao的包名
        -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        <property name="basePackage" value="com.javaEE.crm.settings.dao" />
    </bean>

    <!--声明service的注解@Service所在的包名位置-->
    <context:component-scan base-package="com.javaEE.crm.settings.service" />

    <!--事务配置：注解或者aspectj二选一（程序调试通了再加）-->

</beans>